name: Build and Deploy Docker Images

on:
  workflow_dispatch:
    inputs:
      ref:
        description: Git Ref (e.g. v1.0.0 or 1.0.0-nightly)
        required: true
        type: string

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Calculate Docker Image Tags
        env:
          INPUT_REF: ${{ inputs.ref }}
        run: |
          declare TAGS=""
          case "${INPUT_REF}" in
            v[0-9]*.[0-9]*.[0-9]*)
              TAGS="${INPUT_REF}"
              if [[ "$(git rev-parse origin/main)" == "$(git rev-parse "${INPUT_REF}")" ]]; then
                TAGS="${TAGS} latest"
              fi
              CHANNEL="stable"
              ;;
            [0-9]*.[0-9]*.[0-9]*-nightly)
              TAGS="${INPUT_REF} nightly"
              CHANNEL="nightly"
              ;;
            *)
              echo "❌ Invalid input ref: ${INPUT_REF}"
              exit 1
              ;;
          esac

          if [[ -z "${TAGS}" ]]; then
            echo "❌ No Docker image tags computed."
            exit 1
          fi

          {
            echo 'DOCKER_IMAGE_TAGS<<EOF'
            for tag in ${TAGS}; do
              echo "viren070/aiostreams:${tag}"
              echo "ghcr.io/viren070/aiostreams:${tag}"
            done
            echo EOF
          } >> "${GITHUB_ENV}"

          echo "TAGS=${TAGS}" >> "${GITHUB_ENV}"
          echo "CHANNEL=${CHANNEL}" >> "${GITHUB_ENV}"

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Generate Metadata
        run: |
          node scripts/generateMetadata.js --channel=${{ env.CHANNEL }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.DOCKER_IMAGE_TAGS }}
